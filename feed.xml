<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Grant Ammons</title>
  <subtitle>My thoughts as a developer and engineering leader</subtitle>
  <id>http://grantammons.me</id>
  <link href="http://grantammons.me"/>
  <link href="http://grantammons.me/feed.xml" rel="self"/>
  <updated>2015-12-29T15:23:00-05:00</updated>
  <author>
    <name>Grant Ammons</name>
  </author>
  <entry>
    <title>The importance of celebrating success with your team</title>
    <link rel="alternate" href="http://grantammons.me/2015/12/29/celebrating-success/"/>
    <id>http://grantammons.me/2015/12/29/celebrating-success/</id>
    <published>2015-12-29T15:23:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">
“Ok, so we launched our new feature last night. However we have 30 customer emails from last night about bugs, and we need to hit those right away. Also the error rate is a little spikey, which probably means there’s more issues, and our response time
</summary>
  </entry>
  <entry>
    <title>The simplest thing you can do to not violate the first principle of Agile</title>
    <link rel="alternate" href="http://grantammons.me/2015/12/21/the-simplest-thing/"/>
    <id>http://grantammons.me/2015/12/21/the-simplest-thing/</id>
    <published>2015-12-21T14:23:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">
Individuals and interactions over processes and tools.


Why?  Because the first principle of the Agile Manifesto is so easy to break.  We broke it big time and learned a lot when fixing it.

Tools like Jira seduce you into building a mammoth process</summary>
  </entry>
  <entry>
    <title>Ditching Scrum for Kanban - The best decision we've made as a team</title>
    <link rel="alternate" href="http://grantammons.me/2015/12/14/from-scrum-to-kanban/"/>
    <id>http://grantammons.me/2015/12/14/from-scrum-to-kanban/</id>
    <published>2015-12-14T13:21:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">The following is a story about how we matured as an engineering team.  We went from an ad-hoc process to Scrum, and used Scrum for a whole year.  Scrum leveled us up as a team in terms of structure and process.  But it caused major morale issues.  Then we found Kanban.  We implemented it and have never looked back.

</summary>
  </entry>
  <entry>
    <title>Keep an Engineering Manifesto</title>
    <link rel="alternate" href="http://grantammons.me/2015/12/08/keep-an-engineering-manifesto/"/>
    <id>http://grantammons.me/2015/12/08/keep-an-engineering-manifesto/</id>
    <published>2015-12-08T08:15:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">At PipelineDeals we have an engineering manifesto.  Our manifesto is the backbone of what we stand for as a team.  They are high level, core underpinnings of our team&amp;rsquo;s culture. They read like team-level objectives, but they trancend any time-based measurement.  They are here for the life of the company.

</summary>
  </entry>
  <entry>
    <title>Making 20% time work for your engineering team</title>
    <link rel="alternate" href="http://grantammons.me/2015/11/27/making-20-time-work-for-your-engineering-team-md/"/>
    <id>http://grantammons.me/2015/11/27/making-20-time-work-for-your-engineering-team-md/</id>
    <published>2015-11-27T09:23:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">At PipelineDeals, believe in 20% time.  We call it Investment Time.  Each Friday, engineers are free from the shackles of our backlog to work on creative projects.  It feeds an enormous amount of creativity and happiness with our teams. Also, it helps other departments run better, and pushes our goals as a team forward.

</summary>
  </entry>
  <entry>
    <title>How dependency lines work in object-oriented design</title>
    <link rel="alternate" href="http://grantammons.me/2015/11/10/how-dependency-lines-work-in-oo/"/>
    <id>http://grantammons.me/2015/11/10/how-dependency-lines-work-in-oo/</id>
    <published>2015-11-10T08:01:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">When you look at an object dependency graph, it&amp;rsquo;s not 100% clear how to read it.  When one object points to another,
what does that mean exactly?

An object is said to depend on another object in the following scenarios:


When an object knows the name of another object
When an object knows the name of a method of another object, and knows the arguments that method takes


The first is quite easy to recognize and if you have that first dependency level, you implicitly have the second.  If at
all possible, you want to strive towards the second point.

</summary>
  </entry>
</feed>
