<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Grant Ammons</title>
  <subtitle>My thoughts as a developer and engineering leader</subtitle>
  <id>http://grantammons.me</id>
  <link href="http://grantammons.me"/>
  <link href="http://grantammons.me/feed.xml" rel="self"/>
  <updated>2016-06-01T06:03:00-04:00</updated>
  <author>
    <name>Grant Ammons</name>
  </author>
  <entry>
    <title>Testing time-dependent functions</title>
    <link rel="alternate" href="http://grantammons.me/2016/06/01/testing-time-dependent-functions/"/>
    <id>http://grantammons.me/2016/06/01/testing-time-dependent-functions/</id>
    <published>2016-06-01T06:03:00-04:00</published>
    <updated>2016-06-02T08:14:36-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">Recently I started a weekend project called Todolist, which is a little Go application for the command line that does simple task management.  Todolist is centered around due dates,  and I needed a good way to unit test my code.  So the question was,</summary>
  </entry>
  <entry>
    <title>How to deliver high quality software</title>
    <link rel="alternate" href="http://grantammons.me/2016/03/23/how-to-deliver-high-quality-software/"/>
    <id>http://grantammons.me/2016/03/23/how-to-deliver-high-quality-software/</id>
    <published>2016-03-23T08:21:00-04:00</published>
    <updated>2016-03-23T09:04:35-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">When it comes to software, the term “QA” itself is highly loaded. Because what is it, really? Is it just a thing at the end of the software delivery line, where quality gets lovingly sprayed on at the end, achieving  a nice glossy sheen? Is it a separate</summary>
  </entry>
  <entry>
    <title>4 awesome ways we leveled up as a dev team</title>
    <link rel="alternate" href="http://grantammons.me/2016/01/11/4-awesome-ways-we-leveled-up-as-a-dev-team/"/>
    <id>http://grantammons.me/2016/01/11/4-awesome-ways-we-leveled-up-as-a-dev-team/</id>
    <published>2016-01-11T13:21:00-05:00</published>
    <updated>2016-03-24T14:45:34-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">A major goal you should have as an technical leader is to help grow the abilities of your team.

In order to do this, you need to deliberately cut your engineers’ time away from doing their actual work to focus on learning. On purpose. Knowledge workers</summary>
  </entry>
  <entry>
    <title>The importance of celebrating success with your team</title>
    <link rel="alternate" href="http://grantammons.me/2015/12/29/celebrating-success/"/>
    <id>http://grantammons.me/2015/12/29/celebrating-success/</id>
    <published>2015-12-29T15:23:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">
“Ok, so we launched our new feature last night. However we have 30 customer emails from last night about bugs, and we need to hit those right away. Also the error rate is a little spikey, which probably means there’s more issues, and our response time
</summary>
  </entry>
  <entry>
    <title>The simplest thing you can do to not violate the first principle of Agile</title>
    <link rel="alternate" href="http://grantammons.me/2015/12/21/the-simplest-thing/"/>
    <id>http://grantammons.me/2015/12/21/the-simplest-thing/</id>
    <published>2015-12-21T14:23:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">
Individuals and interactions over processes and tools.


Why?  Because the first principle of the Agile Manifesto is so easy to break.  We broke it big time and learned a lot when fixing it.

Tools like Jira seduce you into building a mammoth process</summary>
  </entry>
  <entry>
    <title>Ditching Scrum for Kanban - The best decision we've made as a team</title>
    <link rel="alternate" href="http://grantammons.me/2015/12/14/from-scrum-to-kanban/"/>
    <id>http://grantammons.me/2015/12/14/from-scrum-to-kanban/</id>
    <published>2015-12-14T13:21:00-05:00</published>
    <updated>2016-03-16T06:45:37-04:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">The following is a story about how we matured as an engineering team.  We went from an ad-hoc process to Scrum, and used Scrum for a whole year.  Scrum leveled us up as a team in terms of structure and process.  But it caused major morale issues.  Then we found Kanban.  We implemented it and have never looked back.

</summary>
  </entry>
</feed>
