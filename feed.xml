<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Grant Ammons</title>
  <subtitle>My thoughts as a developer and engineering leader</subtitle>
  <id>http://grantammons.me</id>
  <link href="http://grantammons.me"/>
  <link href="http://grantammons.me/feed.xml" rel="self"/>
  <updated>2015-11-27T09:23:00-05:00</updated>
  <author>
    <name>Grant Ammons</name>
  </author>
  <entry>
    <title>Making 20% time work for your engineering team</title>
    <link rel="alternate" href="http://grantammons.me/2015/11/27/making-20-time-work-for-your-engineering-team-md/"/>
    <id>http://grantammons.me/2015/11/27/making-20-time-work-for-your-engineering-team-md/</id>
    <published>2015-11-27T09:23:00-05:00</published>
    <updated>2015-11-28T11:56:30-05:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">At PipelineDeals, believe in 20% time.  We call it Investment Time.  Each Friday, engineers are free from the shackles of our backlog to work on creative projects.  It feeds an enormous amount of creativity and happiness with our teams. Also, it helps other departments run better, and pushes our goals as a team forward.

</summary>
  </entry>
  <entry>
    <title>How dependency lines work in object-oriented design</title>
    <link rel="alternate" href="http://grantammons.me/2015/11/10/how-dependency-lines-work-in-oo/"/>
    <id>http://grantammons.me/2015/11/10/how-dependency-lines-work-in-oo/</id>
    <published>2015-11-10T08:01:00-05:00</published>
    <updated>2015-11-14T09:10:15-05:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">When you look at an object dependency graph, it&amp;rsquo;s not 100% clear how to read it.  When one object points to another,
what does that mean exactly?

An object is said to depend on another object in the following scenarios:


When an object knows the name of another object
When an object knows the name of a method of another object, and knows the arguments that method takes


The first is quite easy to recognize and if you have that first dependency level, you implicitly have the second.  If at
all possible, you want to strive towards the second point.

</summary>
  </entry>
  <entry>
    <title>Bitcoin, Litecoin, Dogecoin - Exploring the block chain</title>
    <link rel="alternate" href="http://grantammons.me/2014/01/17/bitcoin-litecoin-dogecoin-exploring-the-block-chain/"/>
    <id>http://grantammons.me/2014/01/17/bitcoin-litecoin-dogecoin-exploring-the-block-chain/</id>
    <published>2014-01-17T09:26:00-05:00</published>
    <updated>2015-11-14T09:01:50-05:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">Ever go to a site like http://blockchain.info and just wonder what all those numbers mean?  Well, wonder no more!  This guide will have you exploring the block chain like a pro.  This guide is separated into two main sections â€“ a brief, high level overview</summary>
  </entry>
  <entry>
    <title>Resources to help guide architectural decisions in Rails apps</title>
    <link rel="alternate" href="http://grantammons.me/2013/12/23/resources-to-help-guide-architectural-decisions/"/>
    <id>http://grantammons.me/2013/12/23/resources-to-help-guide-architectural-decisions/</id>
    <published>2013-12-23T09:11:00-05:00</published>
    <updated>2015-11-14T09:10:12-05:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">My previous
post outlined a trivial example where I refactored some basic, boring business logic into a
service object, or transaction script (depending on who you ask).

It set off a lot of debate on Twitter and Hacker news about the topic.  I was quite surprised.  At the very least it means
that many others have felt the pain of having rails dictate your applications core architecture.

</summary>
  </entry>
  <entry>
    <title>Where the logic hides in Rails apps</title>
    <link rel="alternate" href="http://grantammons.me/2012/12/22/where-the-logic-hides/"/>
    <id>http://grantammons.me/2012/12/22/where-the-logic-hides/</id>
    <published>2012-12-22T06:05:00-05:00</published>
    <updated>2015-11-14T09:10:05-05:00</updated>
    <author>
      <name>Grant Ammons</name>
    </author>
    <summary type="html">DHH recently authored a SVN blog post that advocated breaking up fat models into separate mixins that would live in a new directory in the rails structure, app/concerns.

He made it clear that breaking up domain logic into concerns will make code easier</summary>
  </entry>
</feed>
